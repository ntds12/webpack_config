{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/js/canvas.js","webpack:///./src/js/drawLine/draw_line.js","webpack:///./src/js/drawLine/main_draw_line.js","webpack:///./src/js/rects/draw_pixels_rect.js","webpack:///./src/js/rects/gen_rects.js","webpack:///./src/js/set_ctx.js","webpack:///./src/js/store/state.js","webpack:///./src/js/utils/clear_rect.js","webpack:///./src/js/utils/rand_num_generator.js","webpack:///./src/js/utils/rand_rect_size.js"],"names":["main","set_ctx","state","ctx","translate","canvas","width","height","window","addEventListener","innerHeight","innerWidth","setInterval","clear_rect","main_draw_line","draw_pixels_rect","rotate","first_call_arr","second_call_arr","first_call_counter","second_call_counter","draw_line","name","rotate_num","close_num","i_limit","get_close_to_zero","distance","x","y","turn","strokeStyle","beginPath","moveTo","i","Math","cos","sin","push","lineTo","stroke","closePath","Promise","res","which","rotate_num_arr","j","gen_rect_with_first","arg1","arg2","color","gen_rand_num","rect_size","gen_rect_size","fillStyle","fillRect","gen_rect_with_second","mycanvas","document","getElementById","getContext","lineWidth","bigNum","clearRect","gen","min","max","floor","random","sizes","rand_rect_size","genRandNum","length"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,mC;;;;;;;;;;;ACpCA,iBAAiB,mBAAO,CAAC,0EAAqB;;;;;;;;;;;;ACA9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { state } from './store/state';\n\nimport { main_draw_line } from './drawLine/main_draw_line';\n\nimport { clear_rect } from './utils/clear_rect';\nimport { draw_pixels_rect } from './rects/draw_pixels_rect';\n\nimport set_ctx from './set_ctx';\n\n\nconst main = async () => {\n  await set_ctx();\n\n  state.ctx.translate(state.ctx.canvas.width / 2, state.ctx.canvas.height / 2);\n  window.addEventListener('resize', () => {\n    state.ctx.canvas.height = innerHeight;\n    state.ctx.canvas.width = innerWidth;\n    state.ctx.translate(state.ctx.canvas.width / 2, state.ctx.canvas.height / 2);\n  });\n  setInterval(\n    async () => {\n      await clear_rect();\n      await main_draw_line();\n      await draw_pixels_rect();\n      state.ctx.rotate(-0.2);\n\n\n    },\n    100\n\n  );\n};\n\nmain();\n\n","import { state } from '../store/state';\n\nlet {\n  first_call_arr,\n  second_call_arr,\n  first_call_counter,\n  second_call_counter\n} = state;\n\nexport const draw_line = (name, rotate_num) => {\n  let close_num = 0.3;\n  let i_limit, get_close_to_zero, distance, x, y, turn;\n\n  if (name === 'first') state.ctx.strokeStyle = 'black';\n  else state.ctx.strokeStyle = 'black';\n\n  state.ctx.beginPath();\n  state.ctx.moveTo(0, 0);\n\n  get_close_to_zero = rotate_num * 0.4;\n  i_limit = 9500;\n\n  for (let i = 1; i <= i_limit; i++) {\n    distance = i * close_num;\n    turn = i * get_close_to_zero;\n\n    x = Math.cos(turn) * distance;\n    y = Math.sin(turn) * distance;\n\n    if (name === 'first' && first_call_counter < 1) {\n      first_call_arr.push([x, y]);\n    } else if (name === 'second' && second_call_counter < 1) {\n      second_call_arr.push([x, y]);\n    }\n\n    state.ctx.lineTo(x, y);\n  }\n  if (name === 'first') first_call_counter++;\n  else second_call_counter++;\n\n\n  state.ctx.stroke();\n  state.ctx.moveTo(0, 0);\n  state.ctx.closePath();\n};\n\n","import { draw_line } from './draw_line';\nimport { state } from '../store/state';\n\nconst main_draw_line = () => {\n  return new Promise(res => {\n\n    let which;\n    state.ctx.beginPath();\n    let rotate_num_arr = [\n      {\n        name: \"first\",\n        rotate_num: 0.02\n      },\n      {\n        name: \"second\",\n        rotate_num: 0.03,\n      }];\n    for (let i = 0; i < 2; i++) {\n      which = rotate_num_arr[i];\n      draw_line(which.name, which.rotate_num);\n    }\n    res();\n  });\n};\n\nexport { main_draw_line };","import { state } from '../store/state';\n\nimport {\n  gen_rect_with_first,\n  gen_rect_with_second\n} from './gen_rects';\n\nconst draw_pixels_rect = () => {\n\n\n  state.ctx.stroke();\n  return new Promise(res => {\n    for (let j = 0; j < 4500; j++) {\n      gen_rect_with_first(j, -10, 10, 'silver');\n    }\n    for (let j = 200; j < 4500; j++) {\n      gen_rect_with_first(j, -20, 20, 'silver');\n    }\n    for (let j = 300; j < 4500; j++) {\n      gen_rect_with_first(j, -30, 30, 'silver');\n    }\n    for (let j = 400; j < 4500; j++) {\n      gen_rect_with_first(j, -40, 40, 'silver');\n    }\n\n    res();\n\n  });\n};\n\nexport { draw_pixels_rect };","import { state } from '../store/state';\nimport gen_rect_size from '../utils/rand_rect_size';\n\nconst {\n  first_call_arr,\n  second_call_arr\n} = state;\n\nimport gen_rand_num from '../utils/rand_num_generator';\n\nconst gen_rect_with_first = (i, arg1, arg2, color) => {\n  let x = gen_rand_num(first_call_arr[i][0] + arg1, first_call_arr[i][0] + arg2);\n  let y = gen_rand_num(first_call_arr[i][1] + arg1, first_call_arr[i][1] + arg2);\n\n  const rect_size = gen_rect_size();\n\n  state.ctx.fillStyle = color;\n  state.ctx.fillRect(x, y, rect_size, rect_size);\n\n}\n\nconst gen_rect_with_second = (i, arg2) => {\n  let x = gen_rand_num(second_call_arr[i][0], second_call_arr[i][0] + arg2);\n  let y = gen_rand_num(second_call_arr[i][1], second_call_arr[i][1] + arg2);\n\n  state.ctx.fillStyle = 'silver';\n  state.ctx.fillRect(x, y, 2, 2);\n}\n\n\nexport { gen_rect_with_first, gen_rect_with_second };","import { state } from './store/state';\n\nconst set_ctx = () => {\n  return new Promise(res => {\n    var mycanvas = document.getElementById(\"canvas\");\n    state.ctx = mycanvas.getContext('2d');\n    state.ctx.canvas.height = innerHeight;\n    state.ctx.canvas.width = innerWidth;\n\n    state.ctx.lineWidth = 0.9;\n\n    state.ctx.strokeStyle = 'black';\n    res();\n  });\n};\n\nexport default set_ctx;","let state = {\n  ctx: {},\n  first_call_arr: [],\n  second_call_arr: [],\n  first_call_counter: 0,\n  second_call_counter: 0\n};\n\n\n\nexport { state };","import { state } from '../store/state';\n\nconst clear_rect = () => {\n  const bigNum = 1000000;\n  return new Promise(res => {\n    state.ctx.clearRect(-bigNum, -bigNum, state.ctx.canvas.width * bigNum, state.ctx.canvas.height * bigNum);\n    res();\n  });\n};\n\nexport { clear_rect };","const gen = (min, max) => {\n  return Math.floor(min + Math.random() * (max + 1 - min));\n};\n\nexport default gen;\n","import genRandNum from './rand_num_generator';\n\nconst sizes = [1, 2, 3, 4, 5];\nconst rand_rect_size = () => {\n  return genRandNum(0, sizes.length);\n};\n\nexport default rand_rect_size;\n\n\n"],"sourceRoot":""}